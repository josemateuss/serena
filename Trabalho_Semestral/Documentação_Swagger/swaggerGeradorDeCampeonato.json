{
  "swagger": "2.0",
  "info": {
    "description": "Software que cria e gerencia `campeonatos de tênis`",
    "version": "1.0.0",
    "title": "Gerador de Campeonato de Tênis",
    "termsOfService": "http://swagger.io/terms/"
  },
  "tags": [
    {
      "name": "usuario",
      "description": "Operações sobre o usuário"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/criarUsuario": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Criar usuário",
        "description": "Só é possível criar enquanto estiver logado no sistema.",
        "operationId": "createUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Json do usuário criado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Operação relizada com sucesso"
          }
        }
      }
    },
    "/usuario": {
      "post": {
        "tags": [
          "usuario"
        ],
        "summary": "Adiciona um novo usuario",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Usuário que será adicionado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operação com Sucesso"
          },
          "405": {
            "description": "Método Inválido"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "usuario"
        ],
        "summary": "Atualizar um usuário",
        "description": "",
        "operationId": "updateUser",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Usuário que será adicionado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID fornecido é inválido"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "usuario"
        ],
        "summary": "Apagar usuário",
        "description": "Apagar um usuário já cadastrado",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsername",
            "in": "path",
            "description": "O usuário será apagado",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Nome do usuário é inválido"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/usuario/login": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Logar no sistema",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Nome de usuário para o login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Senha para o usuário digitar",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operação realizada com sucesso",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Chamadas permitidas por hora"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "Data em UTC quando sessão expira"
              }
            }
          },
          "400": {
            "description": "Usuário ou Senha inválido(s)"
          }
        }
      }
    },
    "/usuario/logout": {
      "get": {
        "tags": [
          "usuario"
        ],
        "summary": "Deslogar para quem está logado no sistema",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Operação realizada com sucesso"
          }
        }
      }
    },
    "/criarTime": {
      "post": {
        "tags": [
          "time"
        ],
        "summary": "Criar Time",
        "description": "Só é possível criar enquanto estiver logado no sistema.",
        "operationId": "createTeam",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Json do time criado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Time"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Operação relizada com sucesso"
          }
        }
      }
    },
    "/time": {
      "post": {
        "tags": [
          "time"
        ],
        "summary": "Adiciona um novo time",
        "description": "",
        "operationId": "addTeam",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Um time será adicionado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operação realizada com Sucesso"
          },
          "405": {
            "description": "Método Inválido"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "time"
        ],
        "summary": "Atualizar um time",
        "description": "",
        "operationId": "updateTeam",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Usuário que será adicionado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID do time é inválido"
          },
          "404": {
            "description": "Time não encontrado"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "time"
        ],
        "summary": "Apagar time",
        "description": "Apagar um time já cadastrado",
        "operationId": "deleteTeam",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsername",
            "in": "path",
            "description": "O usuário será apagado",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Nome do usuário é inválido"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/campeonato": {
      "post": {
        "tags": [
          "campeonato"
        ],
        "summary": "Adiciona um novo campeonato",
        "description": "",
        "operationId": "addChampionship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Um campeonato será adicionado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operação realizada com Sucesso"
          },
          "405": {
            "description": "Método Inválido"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "campeonato"
        ],
        "summary": "Atualizar um campeonato",
        "description": "",
        "operationId": "updateChampionship",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Campeonato que será adicionado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID do campeonato é inválido"
          },
          "404": {
            "description": "Campeonato não encontrado"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "campeonato"
        ],
        "summary": "Apagar campeonato",
        "description": "Apagar um time já cadastrado",
        "operationId": "deleteChampionship",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "idUsername",
            "in": "path",
            "description": "O usuário será apagado",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Nome do usuário é inválido"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Usuario": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        },
        "address": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Time": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "teamname": {
          "type": "string"
        },
        "participants": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        },
        "xml": null,
        "name": ""
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "User": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "João"
        },
        "photoUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}